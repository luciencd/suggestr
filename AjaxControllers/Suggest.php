<?php

/**
 * NEED advice on how to make this MVC compatible. Currently it doesn't seem to be so.
 * Given that I require the model(suggestions.php), yet I have to reload all the data from initial refresh.
 */
//require_once('Controllers/suggestions.php');

class SuggestController extends AjaxController {
	public $template = "Suggest";//Identical to search one.
	public function process($get,$post) {
		
		#echo "::suggestController";
		//Global variables are clearly bad, but I don't know enough about the base AjaxController to extend it with 
		//a reference to the model or something.
		$Data = new Database();//$GLOBALS['MODEL']['Data'];//Find a way to make this local to suggestr.php or something.
		
		#echo $Data->testConnection('courses');
		$Data->load();
		#echo $Data->testConnection('courses');

		//////////////

		//Somehow I have to reload everything even if I already loaded it before in Home.php, and set
		//$GLOBALS['MODEL']['Data']; to a $Data that I did $Data->load() on. 
		//PLEASE FIGURE OUT HOW TO ONLY LOAD DATA ONCE.

		///////////////
		
		///getting student from model.
		$student = $Data->getStudent($_COOKIE['sessionId']);

		//getting classes taken from student model.
		$studentCoursesTaken = $student->getTaken();
		$studentCoursesAdded = $student->getAdded();

		//Here's the array of courses generated by the Jaccard index.
		//When we press suggest, it is different as it is explicitly stated we want a suggestion.
		$JaccardCourses = array();
		$JaccardCourses = $Data->getSuggestedCourses($student,$studentCoursesTaken);



		//Getting major from model.
		$this->pageData['numResults'] = $student->getMajor();

		// Select all of the courses that this user is already added or ignored
		// Currently "ignored" is no longer a thing, so we ignore ignores for now. 
		// This takes all of those classes out of the suggestions.
		$idsAlreadyAdded = array_merge($studentCoursesTaken,$studentCoursesAdded);

		

		//Goes through JaccardCourses array, and gets the array representing the facts about each class
		$allCourses = array();
		foreach($JaccardCourses as $class => $score){
			$result = $Data->getReturnArray($class,'course');//new Course();
			array_push($allCourses,$result);
		}
		//$allcourses only contains the course id's
		

		$advisoryArray = array();

		$query = new Query('sliders');
		// Select all the courses that are in this user's session and have this course id
		$result = $query->select('*', array(array('type', '=', "advised")), '');
		
		///echo count($result);
		foreach($result as $advisory){
			//echo $advisory->get('slider_id');
			//echo "<-<";
			array_push($advisoryArray,array('slider_id' => $advisory->get('id'),
			                                'slider_name' => $advisory->get('name'),
			                                'slider_type' => $advisory->get('type')
					  						)
			);
		}
		
		//
		
		//Create new array containing all the course details based on what is in Allcourses, 
		//in a format that will be taken in by the view.
		$allNewCourses = array();
		

		foreach($allCourses as $course){
			try{
				//$course = $Data->getReturnArray($id,'course');
				if(!in_array($course['id'], $idsAlreadyAdded)){ // Check that this course has not been added by the user yet
					$dept = new department();
					$dept->findById($course['department_id']);
					array_push($allNewCourses, array('id' => $course['id'],
												  'name' => $course['name'],
												  'department_id' => $course['department_id'],
												  'department_name' => $dept->get('name'),
												  'department_code' => $dept->get('code'),
												  'number' => $course['number'],
												  'description' => $course['description'],//((strlen($course['description']==0)?'No description':$course['description'])),
												  'allTags' => array(array()),//$Data->courseTags($course->get('id')),//Should contain 5 tags.
												  'ratings' => $Data->rating($course['id']),
												  'stars' => $Data->requirement($course['id']),
												  'stack' => $advisoryArray//,
												  //'score' => $value
												  )
								);
				}
			}catch(Exception $e){}
		}
		#echo var_dump($allNewCourses);
		//Populate webpage with all the different courses that were predicted.
		$failingDatabase = !$Data->testConnection('courses');
		#$failingDatabase = true;
		if($failingDatabase){
			$this->pageData['numResults'] = 0;
			$this->pageData['description'] = "No suggestions, Database Failed!";
			$this->pageData['allCourses'] = $allNewCourses;
			return true;
		}
		if(count($studentCoursesTaken) === 0){
			$this->pageData['numResults'] = (String)count($allCourses);
			$this->pageData['description'] = "Here are popular courses to get started!";
			$this->pageData['allCourses'] = $allNewCourses;
		}else{
			$this->pageData['numResults'] = (String)count($allNewCourses);
			$this->pageData['description'] = "Here are suggestions based on your course history!";
			$this->pageData['allCourses'] = $allNewCourses;
		}
		return true;
	}
}

?>